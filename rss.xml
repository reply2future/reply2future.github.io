<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title></title>
        <link>undefined</link>
        <description>undefined</description>
        <lastBuildDate>Mon, 25 Mar 2024 04:46:09 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>Joplin Pages Publisher</generator>
        <item>
            <title><![CDATA[請一個提摩隊長--少數派個人數據監控]]></title>
            <guid>2ef2bc7ff17c47bda9291a20f678997a</guid>
            <pubDate>Thu, 18 Jan 2024 00:49:24 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="背景">背景</h2>
<p>數據非常的重要，歷史數據可以今我們分析目前的狀況，為之後的決策指明了方向，而實時數據則可以幫助我們在一些場景中獲得先機，譬如：監察購物降價通知。而我最近有個需求是想看看我的一些少數派文章的閱讀數，評論數和充電數，在一個地方就能看到數據，可以分析那個時段最多views，什麼類型的文章最符合大眾口味，所以就有了這篇文章。</p>
<h2 id="成果展示">成果展示</h2>
<p><img src="/_resources/f98891eff0db46d4aae78b25d9cc79cf.png" /><br />
圖示說明：</p>
<ol>
<li>views, likes和comments時間折線圖：可以看到什麼時候閱讀量變化最大</li>
<li>views和likes的堆疊柱狀圖：什麼題材更受觀眾歡迎</li>
<li>文章各項之最排行榜：同2的作用，但可以從views, likes和comments的面向看觀眾的喜好</li>
</ol>
<h2 id="前期工作">前期工作</h2>
<h3 id="如何獲取少數派數據">如何獲取少數派數據</h3>
<p>打開少數派的用戶頁面，<code>F12</code>開發者工具查看我的<a title="https://sspai.com/u/kissdev/posts" href="https://sspai.com/u/kissdev/posts">個人主頁</a>，這個接口返回的數據就不正確都是0，應該是服務器沒有填充數據到模型。<br />
<img src="/_resources/8bf7706644d840e48aafa3540a450f9d.png" /><br />
但是在個人<code>文章管理</code>頁面的接口是可以返回正確的數據，如下圖所示：<br />
<img src="/_resources/afdfe28038514303bf0a03735698d59d.png" /><br />
再查看一下相關的請求是只要帶<a title="https://en.wikipedia.org/wiki/JSON_Web_Token" href="https://en.wikipedia.org/wiki/JSON_Web_Token">JSON Web Token</a>就可以了，然後查看了<code>token</code>的過期時間是一年，又因為登入是有驗證機制，自動化成本就變高了，以最簡單來實現就是拿登入之後的<code>token</code>來直接請求，設置一個提醒，到時過期再手動更換。源碼地址 <a title="https://github.com/reply2future/sspai-prometheus-metrics" href="https://github.com/reply2future/sspai-prometheus-metrics">在此</a></p>
<h2 id="工作流">工作流</h2>
<p>根據上個章節的說明，可得出如下圖所示：<br />
創建一個<code>sspai-exporter</code>的<a title="https://github.com/reply2future/sspai-prometheus-metrics" href="https://github.com/reply2future/sspai-prometheus-metrics">容器服務</a>，該工具定時地通過api抓取用戶的後台數據，由<a title="https://prometheus.io/" href="https://prometheus.io/">prometheus</a>定時拉取，然後將數據展示到我的<a title="https://grafana.com/docs/grafana/latest/" href="https://grafana.com/docs/grafana/latest/">grafana</a>中，可以以圖表的方式看到歷史數據的變化，並且在一些數據添加alert條件，譬如在文章達到一千次views的時候，發送通知我，但alertmanger沒有滿足我的要求，因為涉及到狀態的存儲，暫時先不管這部分需求，之後再想着怎麼處理。<br />
<img src="/_resources/b52282561030425a8d459224b2e8bda5.png" /></p>
<h2 id="目標受眾">目標受眾</h2>
<ol>
<li>docker使用經驗</li>
<li>yaml文件編寫經驗</li>
<li>grafana + prometheus</li>
</ol>
<h2 id="部署">部署</h2>
<h3 id="monitor套件">monitor套件</h3>
<p>在你的服務器，NAS或本地電腦，建一個文件夾來存放相關配置文件<code>docker-compose.yaml</code>和<code>prometheus.yaml</code>。</p>
<h4 id="docker-composeyaml">docker-compose.yaml</h4>
<p>其中<code>docker-compose.yaml</code>定義了各種服務的配署，內容如下：</p>
<div><pre class="hljs"><code><span class="hljs-attr">version:</span> <span class="hljs-string">'3'</span>

<span class="hljs-comment"># 可重用的log配置</span>
<span class="hljs-attr">x-common-log-conf:</span> <span class="hljs-meta">&amp;common_log_conf</span>
  <span class="hljs-attr">logging:</span>
    <span class="hljs-attr">driver:</span> <span class="hljs-string">json-file</span>
    <span class="hljs-attr">options:</span>
      <span class="hljs-attr">max-size:</span> <span class="hljs-string">10m</span>
      <span class="hljs-attr">max-file:</span> <span class="hljs-number">3</span>

<span class="hljs-attr">services:</span>
  <span class="hljs-attr">prometheus:</span>
    <span class="hljs-attr">container_name:</span> <span class="hljs-string">prometheus</span>
    <span class="hljs-attr">image:</span> <span class="hljs-string">prom/prometheus:latest</span>
    <span class="hljs-attr">volumes:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">prometheus_data:/prometheus</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">./prometheus.yaml:/etc/prometheus/prometheus.yml</span>
    <span class="hljs-attr">ports:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">"9090:9090"</span>
    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span>
    <span class="hljs-string">&lt;&lt;:</span> <span class="hljs-meta">*common_log_conf</span>
  <span class="hljs-attr">grafana:</span>
    <span class="hljs-attr">container_name:</span> <span class="hljs-string">grafana</span>
    <span class="hljs-attr">image:</span> <span class="hljs-string">grafana/grafana-oss:latest</span>
    <span class="hljs-attr">volumes:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">grafana_data:/var/lib/grafana</span>
    <span class="hljs-attr">depends_on:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">prometheus</span>
    <span class="hljs-attr">ports:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">"3000:3000"</span>
    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span>
    <span class="hljs-string">&lt;&lt;:</span> <span class="hljs-meta">*common_log_conf</span>
  <span class="hljs-attr">alertmanager:</span>
    <span class="hljs-attr">container_name:</span> <span class="hljs-string">alertmanager</span>
    <span class="hljs-attr">image:</span> <span class="hljs-string">prom/alertmanager:latest</span>
    <span class="hljs-attr">ports:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">"9093:9093"</span>
    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span>
    <span class="hljs-string">&lt;&lt;:</span> <span class="hljs-meta">*common_log_conf</span>
  <span class="hljs-attr">sspai-exporter:</span>
    <span class="hljs-attr">container_name:</span> <span class="hljs-string">sspai-exporter</span>
    <span class="hljs-attr">image:</span> <span class="hljs-string">feimeizhan/sspai-prometheus-metrics:latest</span>
    <span class="hljs-attr">environment:</span>
      <span class="hljs-comment"># 用自己的token替換下面的值`${SSPAI_TOKEN}` </span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">SSPAI_TOKEN=${SSPAI_TOKEN}</span>
    <span class="hljs-attr">ports:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">"4000:3000"</span>
    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span>
    <span class="hljs-string">&lt;&lt;:</span> <span class="hljs-meta">*common_log_conf</span>

<span class="hljs-attr">volumes:</span>
  <span class="hljs-attr">prometheus_data:</span>
  <span class="hljs-attr">grafana_data:</span></code></pre></div>
<p>其中，<code>sspai-exporter</code>是上文提到的需要填寫自己的<code>JWT</code>即可。可以訪問一下<code>http://localhost:4000/metrics</code>查看最後是否有相應內容，看看是否抓取成功<br />
<img src="/_resources/26989aaaaf27492f8168890df3ea075a.png" /></p>
<h4 id="prometheusyaml">prometheus.yaml</h4>
<p><code>prometheus.yaml</code>是prometheus的配置文件，可以用來配置拉取<code>sspai-exporter</code>的數據，具體內容如下，更多配置可參考<a title="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config" href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config">官方文檔</a>，其中需要注意的是，主動拉取的頻率不能太高，否則就會變成攻擊服務器了，控制的參數是<code>scrape_interval</code>，目前設置的是30分鐘拉取一次，測試的時候可以改成<code>5s</code>。</p>
<div><pre class="hljs"><code><span class="hljs-comment"># my global config</span>
<span class="hljs-attr">global:</span>
  <span class="hljs-comment"># scrape_interval: 1m # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span>
  <span class="hljs-comment"># evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.</span>
  <span class="hljs-comment"># scrape_timeout is set to the global default (10s).</span>

<span class="hljs-comment"># Alertmanager configuration</span>
<span class="hljs-attr">alerting:</span>
  <span class="hljs-attr">alertmanagers:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">static_configs:</span>
        <span class="hljs-bullet">-</span> <span class="hljs-attr">targets:</span>
          <span class="hljs-bullet">-</span> <span class="hljs-string">alertmanager:9093</span>

<span class="hljs-comment"># Load rules once and periodically evaluate them according to the global 'evaluation_interval'.</span>
<span class="hljs-attr">rule_files:</span>
  <span class="hljs-comment"># - "first_rules.yml"</span>
  <span class="hljs-comment"># - "second_rules.yml"</span>

<span class="hljs-comment"># A scrape configuration containing exactly one endpoint to scrape:</span>
<span class="hljs-comment"># Here it's Prometheus itself.</span>
<span class="hljs-attr">scrape_configs:</span>
  <span class="hljs-comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">job_name:</span> <span class="hljs-string">"prometheus"</span>

    <span class="hljs-comment"># metrics_path defaults to '/metrics'</span>
    <span class="hljs-comment"># scheme defaults to 'http'.</span>

    <span class="hljs-attr">static_configs:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-attr">targets:</span> [<span class="hljs-string">"localhost:9090"</span>]

  <span class="hljs-bullet">-</span> <span class="hljs-attr">job_name:</span> <span class="hljs-string">sspai-info</span>
    <span class="hljs-attr">scrape_interval:</span> <span class="hljs-string">30m</span>
    <span class="hljs-attr">static_configs:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-attr">targets:</span> [<span class="hljs-string">'sspai-exporter:3000'</span>]</code></pre></div>
<p>另外，如果修改了該配置文件之後要馬上生效，可以用這個方法：<code>curl -X POST localhost:9090/-/reload</code></p>
<h3 id="運行">運行</h3>
<p>配置完成之後，在該文件下使用命令<code>docker-compose up -d</code>。</p>
<h3 id="配置grafana-dashboard">配置grafana dashboard</h3>
<p>打開剛部署成功的grafana管理後台，<code>http://localhost:3000</code>，然後導入我配置好的dashboard JSON，即可見到開篇所說的效果<br />
<img src="/_resources/11af36ba09954110b2eccd04e2dc2c56.png" /></p>
<p><a type="application/json" href="/_resources/ccba005dfb6c4157a74bc9259bcc803a.json">Dashboards data.json</a></p>
<p>如果是沒有數據的話，很可能是設署拉取的時間太長，可以將<code>scrape_interval</code>改成<code>5s</code>，上面的章節也有提及。</p>
<h2 id="結語">結語</h2>
<p>其實本身的需求很簡單，根本都不需要用到<code>prometheus</code>這一套這麼重的工具，本來用<code>TSDB</code>和<code>Chart.js</code>就能搞好的，不過因為本身我自己的家用服務器就有了這一套工具，使用<code>docker</code>部署也最級方便，就有了這一篇文章了。</p>
<h2 id="參考">參考</h2>
<ol>
<li><a title="https://grafana.com/docs/grafana/latest/datasources/prometheus/query-editor/#legend" href="https://grafana.com/docs/grafana/latest/datasources/prometheus/query-editor/#legend">how to change legend</a></li>
<li><a title="https://k21academy.com/docker-kubernetes/prometheus-grafana-monitoring/" href="https://k21academy.com/docker-kubernetes/prometheus-grafana-monitoring/">Install Prometheus and Grafana on Kubernetes using Helm</a></li>
<li><a title="https://prometheus.io/docs/introduction/overview/" href="https://prometheus.io/docs/introduction/overview/">prometheus overview</a></li>
<li>為什麼使用類型<code>gauge</code> 而不使用<code>counter</code> -&gt; 因為可能like也可能取消；簡單為主 <a title="https://prometheus.io/docs/concepts/metric_types/" href="https://prometheus.io/docs/concepts/metric_types/">metrics type</a></li>
<li><a title="https://k21academy.com/wp-content/uploads/2021/06/Prometheus-Server_Chart.png" href="https://k21academy.com/wp-content/uploads/2021/06/Prometheus-Server_Chart.png">prometheus架構圖</a></li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[放輕鬆不輕鬆]]></title>
            <guid>b5281616e191452780199e1a4408d5fd</guid>
            <pubDate>Fri, 12 Jan 2024 07:42:47 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="催化劑">催化劑</h2>
<p>活了二三十年的人生，經歷過12年寒窗苦讀，高考的奮戰到底，進到大學體會到不同家境不同道路的，出國留學，子承父業，出到社會之後馬上就是996，家人緊逼的相親市場，晚上睡個好覺也難，想要放輕鬆的打盤遊戲，也容易因為買錯一個裝備，而在遊戲裏和別人吵架，忙着保護家人，睡覺的時候也想着明天的工作進度一直沒有進展，睡不着了明天更加沒有精神加快進度，就更難以放鬆入眠。如此惡性循環，可能是這個社會大部分人的縮影了。甚至可能有人看到這裡，心跳加速，都想關掉這篇文章了。</p>
<p>Talking more is just like bullshit. 直接入主題。</p>
<h2 id="原則">原則</h2>
<p>有兩大原則:</p>
<ol>
<li>it's okay to be not okay.</li>
<li>人生課題分離。</li>
</ol>
<h2 id="如何實踐">如何實踐</h2>
<h3 id="its-okay-to-be-not-okay">it's okay to be not okay</h3>
<p>從小到大的教育都是要竭盡全力去做各種事情，每個人都期待着你可以「出人頭地」，有一番大事業，如果只是想成為一個簡單的小賣部老闆會被別人恥笑，因為不夠偉大，太過渺小，一定要每個人都是科學家，醫生，律師。如此環境熏陶下，真是上吊都不敢鬆一口氣。</p>
<p>解法也很簡單，<code>it's okay to be not okay</code>。李嘉誠，馬斯克只有一個，你也只有一個你，沒必要要成為別人，你自己就很好了。而這些話我們需要有一個人去每人的提醒自己，不需要時刻緊繃，不需要時刻面對糟糕的人或事情。可能身邊的朋友的鼓勵，一句"你做得很好了"，就可以讓自己鬆了一口氣，如果沒有這樣的朋友(😂)或者覺得這種做法很尷尬也沒關係，有很多app可以每天定時的來一句提醒自己放鬆的說話，比如：<code>[motivation](https://motivation.app/)</code>，每天定時服用，這個和羅永浩先生的雞湯法有異曲同工之妙，他知道人性的弱點之一是懶惰，半途而廢。為了給自己打氣，他買了一百多斤的成功學勵志類二手書，堆在房門口，想放棄的時候，就拿出一本翻翻，一口氣上了三天學（💪）。</p>
<p><img src="/_resources/81b8683505314be89343d569dc4a5c89.PNG" /></p>
<h3 id="人生課題分離">人生課題分離</h3>
<p>這是我看了「被討厭的勇氣」這本書得出來的，你應該要知道什麼是你「人生的課題」，什麼是別人對你的期望。「人生課題」分成三個部分：交友，工作和愛。</p>
<blockquote>
<p>要分清"能夠改變的"和"不能改變的"。我們無法改變"被給予了什麼"。但是，關於"如何去利用被給予的東西"，我們卻可以用自己的力量去改變。這就是不去關注"無法改變的"，而去關注"可以改變的"。這就是我所說的自我接納。-- 「被討厭的勇氣」</p>
</blockquote>
<p>還有最讓華人圈頭痛的父母寫子女的關係。</p>
<blockquote>
<p>苦惱於與孩子之間的關係的父母往往容易認為： 孩子就是我的人生。總之就是把孩子的課題也看成是自己的課題，總是只考慮孩子，而當意識到的時候，他們己經失去了自我。--「被討厭的勇氣」</p>
</blockquote>
<p>這個時候就要祭出<a title="https://qr.ae/pKm5Cw" href="https://qr.ae/pKm5Cw">最強法寶</a>：</p>
<p><img src="/_resources/114f6c1a2b4948bea7aaed3805eee781.png" /></p>
<p><img src="/_resources/76f1dfc4d1524aaea13ae928bd09c7ea.jpeg" /></p>
<p>或者還有這個<a title="https://qr.ae/pKm5Hg" href="https://qr.ae/pKm5Hg">循環法寶</a>：</p>
<p><img src="/_resources/0e3cc813281844f08617757447072c3c.jpeg" /></p>
<h3>...</h3>
<p>你居然看到了這裡，看來你的這口氣憋了好久，要放鬆一下，我的朋友。見是你，就把最後這個法寶也給你了，「信仰」。</p>
<p>簡單來說，就是把這個鼓勵你的朋友轉成「信仰」，比如在南方多是觀音菩薩（本人無神論者，只是作個比喻）。如果你旅行的時候，因為另一半要吃某一樣製作耗時的甜點，而錯過了尾班車。這個時候先不要生氣和埋怨，可能是菩薩想要邀請你再探索一下這個地方，你轉換了心態，說不定第二天真給你找到更好的風景和美食。</p>
<blockquote>
<p>如果我們保持一樣的暗示和奬賞，就能植入一種新的慣常行為。但這還不夠，為了保持這個習慣，人們還得相信改變是可能的。而大多數時候，只有在团體的助力下，才能形成信仰。-- 「習慣的力量」</p>
</blockquote>
<h2 id="結語">結語</h2>
<p>多的不說了，你也很努力了，it's okay to be not okay。別忘了奬勵一下走到這裡的自己。</p>
<h2 id="參考">參考</h2>
<ol>
<li>我目前的人生</li>
<li>書籍「被討厭的勇氣」</li>
<li>書籍「習慣的力量」</li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[BFS vs DFS]]></title>
            <guid>b07a2ee323804572bfaf7ae2efeb4bcf</guid>
            <pubDate>Fri, 24 Mar 2023 16:01:46 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="背景">背景</h1>
<p>搜索算法的兩種思路，廣度優先(BFS)和深度優先(DFS)遍歷圖，都通過記錄已遍歷的節點避免圖中的環。</p>
<h2 id="bfs">BFS</h2>
<div><pre class="hljs"><code>visited := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[Pos]<span class="hljs-keyword">bool</span>)
stack := <span class="hljs-built_in">make</span>([]Pos) <span class="hljs-comment">// 下一次要遍歷的節點，空的時候結束，每次將節點周圍的節點入列。</span></code></pre></div>
<h2 id="dfs">DFS</h2>
<div><pre class="hljs"><code>visited := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[Pos]<span class="hljs-keyword">bool</span>)

<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">travel</span><span class="hljs-params">(node)</span></span> {
    travel(node.children)
}</code></pre></div>
<p>通過遞歸的方式入棧子節點。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[golang 存在檢測方案]]></title>
            <guid>6836bd3047f44a2e92230c14f0873021</guid>
            <pubDate>Fri, 24 Mar 2023 16:00:24 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="map">map</h2>
<p>有時侯需要記綠一下數據集是否存在，就會想到用<code>map</code>數據結構，比如：<code>map[int]bool</code>，但是如果並不關心或者不用儲存值的話就可以使用 <code>map[int]interface{}</code>，這樣的區別是可以賦值 <code>struct{}{}</code>，減少內存空間的占用：</p>
<div><pre class="hljs"><code>cache := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-keyword">int</span>]<span class="hljs-keyword">interface</span>{})
cache[<span class="hljs-number">1</span>] = <span class="hljs-keyword">struct</span>{}{}</code></pre></div>
<p>其中內存空間查看： <a title="https://go.dev/play/p/mJj4rNQJsxD" href="https://go.dev/play/p/mJj4rNQJsxD">playground</a></p>
<div><pre class="hljs"><code><span class="hljs-keyword">package</span> main

<span class="hljs-keyword">import</span> (
    <span class="hljs-string">"fmt"</span>
    <span class="hljs-string">"unsafe"</span>
)

<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> {
    a := <span class="hljs-keyword">struct</span>{}{}
    b := <span class="hljs-literal">true</span>
    c := <span class="hljs-number">0</span>
    d := <span class="hljs-string">""</span>
    fmt.Println(unsafe.Sizeof(a))
    fmt.Println(unsafe.Sizeof(b))
    fmt.Println(unsafe.Sizeof(c))
    fmt.Println(unsafe.Sizeof(d))
}</code></pre></div>
<p>結果</p>
<div><pre class="hljs"><code>0
1
8
16</code></pre></div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[golang append修改原數組情況]]></title>
            <guid>fa1fefd697894f3d86e4e9e7672d8e5b</guid>
            <pubDate>Fri, 24 Mar 2023 16:00:02 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="背景">背景</h2>
<p><a title="https://go.dev/play/p/h751UX98ow4" href="https://go.dev/play/p/h751UX98ow4">示例代碼</a></p>
<div><pre class="hljs"><code><span class="hljs-keyword">package</span> main

<span class="hljs-keyword">import</span> <span class="hljs-string">"fmt"</span>

<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> {
    a := []<span class="hljs-keyword">int</span>{<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>}
    a2 := <span class="hljs-built_in">append</span>(a[:<span class="hljs-number">2</span>], a[<span class="hljs-number">3</span>:]...)
    fmt.Println(a2)
    fmt.Println(a)
    fmt.Println(&amp;a2[<span class="hljs-number">0</span>] == &amp;a[<span class="hljs-number">0</span>])
    a[<span class="hljs-number">0</span>] = <span class="hljs-number">-1</span>
    fmt.Println(a2)
    fmt.Println(a)
    fmt.Println(<span class="hljs-string">"-------------"</span>)
    b := []<span class="hljs-keyword">int</span>{<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>}
    b2 := <span class="hljs-built_in">append</span>(b[:<span class="hljs-number">2</span>], []<span class="hljs-keyword">int</span>{<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>}...)
    fmt.Println(b2)
    fmt.Println(b)
    fmt.Println(&amp;b2[<span class="hljs-number">0</span>] == &amp;b[<span class="hljs-number">0</span>])
    b[<span class="hljs-number">0</span>] = <span class="hljs-number">-1</span>
    fmt.Println(b2)
    fmt.Println(b)
}</code></pre></div>
<p>輸出結果：</p>
<div><pre class="hljs"><code>[1 2 4 5 6 7]
[1 2 4 5 6 7 7]
true
[-1 2 4 5 6 7]
[-1 2 4 5 6 7 7]
-------------
[1 2 5 6 7 8 9 10]
[1 2 3 4]
false
[1 2 5 6 7 8 9 10]
[-1 2 3 4]</code></pre></div>
<h2 id="解釋">解釋</h2>
<p><code>a[0:2]</code>長度為2, <code>a[3:]</code>長度為4，原本的數組a長度為7,不需要擴展生成新數組( <a title="https://pkg.go.dev/builtin#append" href="https://pkg.go.dev/builtin#append">api說明</a> ）</p>
<blockquote>
<p>append 內置函數將元素附加到切片的末尾。如果它有足夠的容量，則重新劃分目標以容納新元素。如果沒有，將分配一個新的底層數組。 Append 返回更新後的切片。因此有必要將 append 的結果存儲在保存切片本身的變量中：</p>
</blockquote>
<p>所以，就在原來的數組a上面做修改。</p>
<p>而b的情況相反，新數組長度為6，大於b的長度4，擴展了數組，生成新的數組。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[保護個人穩私]]></title>
            <guid>8f7e0ae0be6f417fb249ca807d60bdd3</guid>
            <pubDate>Fri, 24 Mar 2023 15:58:48 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="目的">目的</h2>
<p>盡可能避免個人穩私漏露</p>
<h2 id="原因">原因</h2>
<p>個人穩私信息漏露之後，可能引來各式各樣的詐騙。</p>
<h2 id="途徑和應對">途徑和應對</h2>
<p>下面展示幾個比較常見的途徑</p>
<h3 id="註冊賬號">註冊賬號</h3>
<table>
<thead>
<tr>
<th>維度</th>
<th>可能包含信息</th>
<th>查詢關聯方法</th>
<th>應對方法</th>
</tr>
</thead>
<tbody>
<tr>
<td>手機號</td>
<td>- 國家地區</td>
<td></td>
<td>通訊運營商提供的小號功能，比如移動的"和多號"，區分不同用途</td>
</tr>
<tr>
<td>email</td>
<td>- 出生日期</td>
<td><a title="https://monitor.firefox.com/" href="https://monitor.firefox.com/">Firefox Monitor</a></td>
<td>使用臨時email，比如"<a title="https://10minutemail.com/" href="https://10minutemail.com/">10minutes email</a>"，不過有些網站會禁止</td>
</tr>
<tr>
<td>用戶名</td>
<td>- 出生日期<br class="jop-noMdConv" />- 國籍<br class="jop-noMdConv" />- 性別</td>
<td></td>
<td>隨機生成字符串</td>
</tr>
<tr>
<td>密碼</td>
<td>- 出生日期</td>
<td></td>
<td>專門管理密碼的工具，比如"LastPass"</td>
</tr>
<tr>
<td>ip</td>
<td>- 地理信息<br class="jop-noMdConv" />- 網絡運營商</td>
<td><a title="https://www.ipip.net/ip.html" href="https://www.ipip.net/ip.html">ipipnet</a></td>
<td>tor-browser 可以切換不同的ip節點，或者使用VPN，不過也要留意VPN的口碑</td>
</tr>
<tr>
<td>身分證</td>
<td>- 出生日期<br class="jop-noMdConv" />- 出生地<br class="jop-noMdConv" />- 性別</td>
<td></td>
<td>身分證生成器對一些不嚴格的網站有效，比如：<a title="https://id.ifreesite.com/" href="https://id.ifreesite.com/">身分證生成器</a></td>
</tr>
<tr>
<td>頭像</td>
<td>- 大致年齡<br class="jop-noMdConv" />- 領域<br class="jop-noMdConv" />- 性格<br class="jop-noMdConv" />- 個人特徵</td>
<td></td>
<td><a title="https://this-person-does-not-exist.com/en" href="https://this-person-does-not-exist.com/en">隨機生成真人頭像</a></td>
</tr>
</tbody>
</table>
<h3 id="瀏覽器">瀏覽器</h3>
<table>
<thead>
<tr>
<th>維度</th>
<th>可能包含信息</th>
<th>應對方法</th>
</tr>
</thead>
<tbody>
<tr>
<td>cookies</td>
<td>- 站點瀏覽記錄</td>
<td>定期清理cookies</td>
</tr>
<tr>
<td>指紋</td>
<td>唯一標識，即使沒有註冊賬號，也能通過以下信息（User-Agent）計算唯一標識<br class="jop-noMdConv" />- 操作系統類型<br class="jop-noMdConv" />- 語言<br class="jop-noMdConv" />- 時區<br class="jop-noMdConv" />- 瀏覽器內核版本號<br class="jop-noMdConv" />- 瀏覽器展示尺寸</td>
<td>1. tor-browser<br class="jop-noMdConv" />2. <a title="https://geekflare.com/change-user-agent-in-browser/" href="https://geekflare.com/change-user-agent-in-browser/">變更User-Agent</a></td>
</tr>
<tr>
<td>歷史記錄</td>
<td>標籤信息，信息關聯</td>
<td>定期清理記錄</td>
</tr>
<tr>
<td>搜尋記錄</td>
<td>標籤信息，信息關聯</td>
<td>- 定期清理記錄<br class="jop-noMdConv" />- 使用非google, baidu的引擎，比如 <a title="https://duckduckgo.com/" href="https://duckduckgo.com/">https://duckduckgo.com/</a></td>
</tr>
</tbody>
</table>
<h3 id="應用程式">應用程式</h3>
<table>
<thead>
<tr>
<th>維度</th>
<th>可能包含信息</th>
<th>查詢關聯方法</th>
<th>應對方法</th>
</tr>
</thead>
<tbody>
<tr>
<td>圖片</td>
<td>- 地理位置<br class="jop-noMdConv" />- 拍攝時間<br class="jop-noMdConv" />- <a title="https://ixyzero.com/blog/archives/5418.html" href="https://ixyzero.com/blog/archives/5418.html">盲水印</a></td>
<td><a title="https://exif.tuchong.com/" href="https://exif.tuchong.com/">exif</a></td>
<td>使用工具刪除相關信息，比如：<a title="https://exiftool.org/" href="https://exiftool.org/">ExifTool</a></td>
</tr>
<tr>
<td>分享鏈接</td>
<td>- userId<br class="jop-noMdConv" />- utm_source=分享來源</td>
<td>大部分可以通過URL直接看得出來</td>
<td>刪除URL該部分信息再分享，不過分享就代表被標籤</td>
</tr>
<tr>
<td>人臉識別</td>
<td>- 大約年齡<br class="jop-noMdConv" />- 國籍<br class="jop-noMdConv" />- 性別<br class="jop-noMdConv" />- 身體狀況<br class="jop-noMdConv" />- 個人特徵</td>
<td></td>
<td>盡可能不提供</td>
</tr>
<tr>
<td>語音</td>
<td>- 大約年齡<br class="jop-noMdConv" />- 性格<br class="jop-noMdConv" />- 性別<br class="jop-noMdConv" />- 情緒<br class="jop-noMdConv" />- 個人特徵</td>
<td></td>
<td>盡可能不提供</td>
</tr>
<tr>
<td>輸入法</td>
<td>所有</td>
<td></td>
<td>使用開源輸入法，比如：<a title="https://rime.im/" href="https://rime.im/">rime</a></td>
</tr>
</tbody>
</table>
<h3 id="操作系統">操作系統</h3>
<p>主要防止應用有過多權限，並且及時打上安全補丁，以下是一些可能有用的措施<br />
1. windows: 使用虛擬機或者開啟沙盒模式運行高風險未知來源程序<br />
2. macOS/iOS：盡可能使用app store或者可靠的第三方程式管理工具（比如brew），得益於嚴格的審覈制度<br />
3. Android: 在android 10 之後添加了權限僅在使用時有效</p>
<h2 id="總結">總結</h2>
<p>堅持以下原則：<br />
1. 最小權限<br />
2. 生成數據隨機性以混淆信息<br />
3. 所有東西都是權衡的結果</p>
<h2 id="參考">參考</h2>
<p>1. <a title="https://github.com/ffffffff0x/Digital-Privacy" href="https://github.com/ffffffff0x/Digital-Privacy">Digital-Privacy</a><br />
2. <a title="https://github.com/kallydev/privacy.kallydev.com/blob/main/posts/index.mdx" href="https://github.com/kallydev/privacy.kallydev.com/blob/main/posts/index.mdx">如何在網絡中保護隱私</a></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Logger的總結]]></title>
            <guid>3944b2f1aa194397a8c06edfff8c2b57</guid>
            <pubDate>Fri, 24 Mar 2023 15:57:03 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="背景">背景</h2>
<p><span style="color:#172b4d" class="jop-noMdConv">日誌重要性不言而喻：</span></p>
<ol>
<li>快速定位和重現問題</li>
<li>發現服務瓶頸(服務耗時，當然這一部分也可以通過其他無入侵式監控方式實現)</li>
</ol>
<h2 id="日誌分類">日誌分類</h2>
<table>
<thead>
<tr>
<th>分類</th>
<th>說明</th>
<th>@cols=1:一般面向人員</th>
</tr>
</thead>
<tbody>
<tr>
<td>診斷日誌</td>
<td><ol class="jop-noMdConv"><li class="jop-noMdConv">函數調用入參和出參</li><li class="jop-noMdConv">外部服務調用</li><li class="jop-noMdConv">捕獲異常信息</li><li class="jop-noMdConv">關鍵中間變量變化</li><li class="jop-noMdConv">加載配置</li><li class="jop-noMdConv">操作定時服務</li></ol></td>
<td>@cols=1:服務開發者</td>
</tr>
<tr>
<td>統計日誌</td>
<td><ol class="jop-noMdConv"><li class="jop-noMdConv">請求耗時</li><li class="jop-noMdConv">請求頭標識信息</li><li class="jop-noMdConv">請求時間</li><li class="jop-noMdConv">資源信息(cpu和memory佔用)</li></ol></td>
<td>@cols=1:運維</td>
</tr>
</tbody>
</table>
<h2 id="日誌內容">日誌內容</h2>
<h3 id="原則">原則</h3>
<p>目前只針對<code>診斷日誌</code>做說明</p>
<table>
<thead>
<tr>
<th>原則</th>
<th>說明</th>
</tr>
</thead>
<tbody>
<tr>
<td>開始輸入參數</td>
<td>方便重現問題</td>
</tr>
<tr>
<td>結束輸出參數</td>
<td>判斷是否符合預期</td>
</tr>
<tr>
<td>中間關鍵變量變化</td>
<td>儘量保證一個函數一個職責，減少中間變量</td>
</tr>
<tr>
<td>不可達代碼打印記錄</td>
<td>方便查找bug</td>
</tr>
<tr>
<td>避免打印日誌引入異常</td>
<td>比如: null引用，一般框架會自帶處理</td>
</tr>
<tr>
<td>logging</td>
<td>對於不需要輸出的日誌(DEBUG)所做的操作，避免性能損耗，比如說字符串拼接</td>
</tr>
<tr>
<td>設置【<a title="https://wiki.dm-ai.cn/pages/viewpage.action?pageId=208963578#:~:text=%E6%97%A5%E5%BF%97%E7%9A%84%E7%BA%A7%E5%88%AB,%E6%97%A5%E5%BF%97%E6%9D%A5%E5%AE%9A%E4%BD%8D%E9%97%AE%E9%A2%98" href="https://wiki.dm-ai.cn/pages/viewpage.action?pageId=208963578#:~:text=%E6%97%A5%E5%BF%97%E7%9A%84%E7%BA%A7%E5%88%AB,%E6%97%A5%E5%BF%97%E6%9D%A5%E5%AE%9A%E4%BD%8D%E9%97%AE%E9%A2%98">日誌等級</a>】</td>
<td>生產環境關閉debug日誌，避免浪費磁盤和大量日誌干擾問題的定位</td>
</tr>
<tr>
<td>不要打印敏感信息</td>
<td>用戶密碼，key之類的</td>
</tr>
<tr>
<td>打印捕獲異常日誌</td>
<td>方便知道異常信息</td>
</tr>
</tbody>
</table>
<h3 id="格式">格式</h3>
<p><code>【時間】,【 等級】, 【traceId/clusterId】,【module/function】 【action】, 【changed value/arguments】</code> (5W1H)</p>
<h2 id="參考">參考</h2>
<ol>
<li><a title="https://wiki.dm-ai.cn/pages/viewpage.action?pageId=208963578" href="https://wiki.dm-ai.cn/pages/viewpage.action?pageId=208963578">3.服務日誌規範文檔</a>  !!! 強力推薦 !!!</li>
<li><a title="https://www.cntofu.com/book/78/p3c-gitbook/%E5%BC%82%E5%B8%B8%E6%97%A5%E5%BF%97/%E6%97%A5%E5%BF%97%E8%A7%84%E7%BA%A6.md" href="https://www.cntofu.com/book/78/p3c-gitbook/%E5%BC%82%E5%B8%B8%E6%97%A5%E5%BF%97/%E6%97%A5%E5%BF%97%E8%A7%84%E7%BA%A6.md">阿里巴巴Java開發手冊-日誌規約</a></li>
<li><a title="https://www.scalyr.com/blog/the-10-commandments-of-logging/" href="https://www.scalyr.com/blog/the-10-commandments-of-logging/">LOGGING BEST PRACTICES: THE 13 YOU SHOULD KNOW</a></li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[權限控制速覽]]></title>
            <guid>0d4c39a3bf294cacacede00572ce5044</guid>
            <pubDate>Fri, 24 Mar 2023 15:56:11 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="背景">背景</h2>
<p><span style="color:#172b4d" class="jop-noMdConv">科普權限設計和原理。</span></p>
<p><span style="color:#172b4d" class="jop-noMdConv">資源權限控制，涉及到幾個方面</span></p>
<ol>
<li>顆粒度</li>
<li>控制邏輯</li>
<li>組織架構</li>
</ol>
<h2 id="業內通用術語">業內通用術語</h2>
<table>
<thead>
<tr>
<th>術語</th>
<th>全稱</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>XACML</td>
<td><strong>eXtensible Access Control Markup Language</strong></td>
<td>定義了一種聲明性細粒度、基於屬性的訪問控制策略語言、架構和描述如何根據策略中定義的規則評估訪問請求的處理模型。<br class="jop-noMdConv" /><br class="jop-noMdConv" />XACML 的目標之一是促進多個供應商的訪問控制實現之間的通用術語和互操作性。<br class="jop-noMdConv" /><br class="jop-noMdConv" />XACML 主要是一種基於屬性的訪問控制系統 (ABAC)，也稱爲基於策略的訪問控制 (PBAC) 系統，其中與用戶或操作或資源相關聯的屬性（數據位）被輸入到決定是否給定用戶可以以特定方式訪問給定資源。<br class="jop-noMdConv" /><br class="jop-noMdConv" />基於角色的訪問控制(RBAC) 也可以在 XACML 中實現，作爲 ABAC 的特化</td>
</tr>
<tr>
<td>ABAC</td>
<td><strong>Attribute-based access control</strong><span style="color:#202122" class="jop-noMdConv"> </span></td>
<td>訪問權限通過使用這些屬性結合在一起的政策，授予用戶。策略可以使用任何類型的屬性（用戶屬性、資源屬性、對象、環境屬性等）。此模型支持布爾邏輯，其中規則包含有關誰在發出請求、資源和操作的“IF, THEN”語句。</td>
</tr>
<tr>
<td>PBAC</td>
<td><strong>Policy-based access control</strong></td>
<td>同上</td>
</tr>
<tr>
<td>@cols=1:RBAC</td>
<td>@cols=1:<strong>role-based access control</strong><span style="color:#202122" class="jop-noMdConv"> </span></td>
<td>@cols=1:是一種限制授權用戶訪問系統的方法。它是一種實現強制訪問控制（MAC）或自由訪問控制（DAC）的方法，關鍵是角色和組來控制，其中組是用戶的集合而不是權限的集合；三大原則<br class="jop-noMdConv" /><br class="jop-noMdConv" /><ol class="jop-noMdConv"><li class="jop-noMdConv">最小權限原則</li><li class="jop-noMdConv"><span style="color:#555555" class="jop-noMdConv">責任分離原則</span></li><li class="jop-noMdConv"><span style="color:#555555" class="jop-noMdConv">數據抽象</span></li></ol></td>
</tr>
</tbody>
</table>
<h2 id="同類技術對比">同類技術對比</h2>
<table>
<thead>
<tr>
<th>方法</th>
<th>場景</th>
<th>@cols=1:結構</th>
<th>@cols=1:例子</th>
<th>優勢</th>
<th>劣勢</th>
</tr>
</thead>
<tbody>
<tr>
<td>ABAC/PBAC</td>
<td><ol class="jop-noMdConv"><li class="jop-noMdConv">api和微服務安全</li><li class="jop-noMdConv">應用安全</li><li class="jop-noMdConv">數據庫安全</li><li class="jop-noMdConv">數據安全</li><li class="jop-noMdConv">大數據安全</li><li class="jop-noMdConv">文件服務安全</li></ol></td>
<td>@cols=1:<ol class="jop-noMdConv"><li class="jop-noMdConv"><b class="jop-noMdConv">對象</b>：用戶 ID、用戶職位、部門、入職時間、是否通過試用期等等</li><li class="jop-noMdConv"><b class="jop-noMdConv">資源</b>：資源創建日期、資源最新更新時間、資源類型（文件、訂單詳情數據）、資源分類（訂單管理、文章管理等）等</li><li class="jop-noMdConv"><b class="jop-noMdConv">操作</b>：新增、查看、刪除等</li><li class="jop-noMdConv"><b class="jop-noMdConv">環境</b>：IP 地址、時間等</li></ol></td>
<td>@cols=1:初級前端工程師（對象）可以下載（操作）內網中的（環境）GitLab 前端源代碼（資源）</td>
<td><ol class="jop-noMdConv"><li class="jop-noMdConv">靈活</li><li class="jop-noMdConv">顆粒度小</li><li class="jop-noMdConv">除了角色和組，還可以通過用戶，資源（部門，分類等），行動，上下文（時間，位置，ip等）</li></ol></td>
<td><ol class="jop-noMdConv"><li class="jop-noMdConv">基於 XACML 實現的 ABAC 模型在執行 效率、語法結構等方面存在不足</li><li class="jop-noMdConv">策略制定麻煩</li><li class="jop-noMdConv">靈活帶來複雜性，比如用戶id配置權限會破壞原來角色策略，難以控制權限訪問</li></ol></td>
</tr>
<tr>
<td>RBAC</td>
<td>單系統或者應用如計算機用戶權限控制</td>
<td>@cols=1:權限→角色→用戶</td>
<td>@cols=1:<img src="https://www.notion.so/image/https%3A%2F%2Fs3.us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F97d6526b-5ad2-4dcc-9c22-e21f37773a87%2FRBAC_%25282%2529.svg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45EIPT3X45%252F20211205%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20211205T102845Z%26X-Amz-Expires%3D86400%26X-Amz-Signature%3D45a3d5586d34d6d165de558b7f70fb6f8f74c97dd21662a86ddec6049c97e5c0%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject?table=block&amp;id=0e598390-1ae3-4e47-ba1e-924c6e0bb6e6&amp;cache=v2" alt="notion image" /><br class="jop-noMdConv" /></td>
<td><ol class="jop-noMdConv"><li class="jop-noMdConv">穩定：從管理角度出發，角色是爲了解決特定問題而被創造的，也就是解決分工問題，而用戶的變動幾率比系統裏的角色大多了，角色這一定義相對會更加穩定一些。</li><li class="jop-noMdConv">簡單：用戶與權限的邏輯分離，使得權限只和角色相關。而根據上文，角色是被相關干係人或行業直接創造出來的，以角色爲核心的權限管理體系的理解成本和學習成本相對於新造概念會少上很多，非常利於在內部推廣。</li></ol></td>
<td>因爲權限控制都和角色有關，會遇到一下問題：<br class="jop-noMdConv" /><br class="jop-noMdConv" /><ol class="jop-noMdConv"><li class="jop-noMdConv">臨時需要新增權限就只能新增角色，可能導致角色爆炸膨脹，難以管理；</li><li class="jop-noMdConv">新增資源也可能需要更改大部分角色配置，難以管理</li></ol></td>
</tr>
</tbody>
</table>
<h2 id="授權框架">授權框架</h2>
<table>
<thead>
<tr>
<th></th>
<th>OPA</th>
<th>@cols=1:Casbin</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>OPA</td>
<td>@cols=1:Casbin</td>
</tr>
<tr>
<td>---</td>
<td>---</td>
<td>------</td>
</tr>
<tr>
<td>定義</td>
<td>策略引擎，有自己的語言Rego</td>
<td>@cols=1:權限控制庫，支持RBAC，ABAC，ACL等多種模型</td>
</tr>
<tr>
<td>架構特點</td>
<td><img alt="integration.png" /><br class="jop-noMdConv" /></td>
<td>@cols=1:<img alt="Casbin架構.png" /></td>
</tr>
<tr>
<td>支持模型</td>
<td>Access Control<br class="jop-noMdConv" /><br class="jop-noMdConv" /><ol class="jop-noMdConv"><li class="jop-noMdConv">RBAC</li><li class="jop-noMdConv">ABAC</li></ol>Envoy<br class="jop-noMdConv" /><br class="jop-noMdConv" /><ol class="jop-noMdConv"><li class="jop-noMdConv">jwt</li><li class="jop-noMdConv">url</li><li class="jop-noMdConv">roles</li></ol>Kubernetes<br class="jop-noMdConv" /><br class="jop-noMdConv" /><ol class="jop-noMdConv"><li class="jop-noMdConv">label</li><li class="jop-noMdConv">image safety</li><li class="jop-noMdConv">ingress conflicts</li></ol><a title="https://www.openpolicyagent.org/docs/latest/comparison-to-other-systems/" href="https://www.openpolicyagent.org/docs/latest/comparison-to-other-systems/">有案例</a><br class="jop-noMdConv" /><br class="jop-noMdConv" />代碼<a title="https://play.openpolicyagent.org/p/CMY8T79ZoB" href="https://play.openpolicyagent.org/p/CMY8T79ZoB">演練</a><br class="jop-noMdConv" /></td>
<td>@cols=1:ACL<br class="jop-noMdConv" />ACL with superuser<br class="jop-noMdConv" />ACL without users<br class="jop-noMdConv" />ACL without resources<br class="jop-noMdConv" />RBAC<br class="jop-noMdConv" />RBAC with resource roles<br class="jop-noMdConv" />RBAC with domains/tenants<br class="jop-noMdConv" />ABAC<br class="jop-noMdConv" />RESTful<br class="jop-noMdConv" />Deny-override<br class="jop-noMdConv" />Allow-and-deny<br class="jop-noMdConv" />Priority<br class="jop-noMdConv" />Explicit Priority<br class="jop-noMdConv" />Subject-Priority<br class="jop-noMdConv" /><br class="jop-noMdConv" /><br class="jop-noMdConv" /><a title="https://casbin.org/en/editor/" href="https://casbin.org/en/editor/">案例和代碼演練</a></td>
</tr>
<tr>
<td>@cols=1:在線演練</td>
<td>@cols=1:<a title="https://casbin.org/en/editor/" href="https://casbin.org/en/editor/">https://casbin.org/en/editor/</a></td>
<td>@cols=1:<a title="https://play.openpolicyagent.org/" href="https://play.openpolicyagent.org/">https://play.openpolicyagent.org/</a></td>
</tr>
<tr>
<td>@cols=1:定義語法</td>
<td>@cols=1:Rego，簡單</td>
<td>@cols=1:config語法，簡單<br class="jop-noMdConv" /><br class="jop-noMdConv" /><img alt="Snipaste_2021-12-28_16-23-33.png" /></td>
</tr>
<tr>
<td>@cols=1:接入形式</td>
<td>@cols=1:服務或者庫</td>
<td>@cols=1:庫</td>
</tr>
<tr>
<td>@cols=1:支持接入語言</td>
<td>@cols=1:主流語言</td>
<td>@cols=1:主流語言</td>
</tr>
<tr>
<td>@cols=1:策略讀取方式</td>
<td>@cols=1:<span style="color:#ff0000" class="jop-noMdConv"><a title="https://www.openpolicyagent.org/docs/latest/management-bundles/#bundle-file-format" href="https://www.openpolicyagent.org/docs/latest/management-bundles/#bundle-file-format">bundle</a></span><br class="jop-noMdConv" /></td>
<td>@cols=1:csv，數據庫等，主要看adapter的使用</td>
</tr>
<tr>
<td>@cols=1:系統接入</td>
<td>@cols=1:kubernetes，envoy，ceph，kafka等</td>
<td>@cols=1:kubernetes，envoy</td>
</tr>
<tr>
<td>@cols=1:IDE支持</td>
<td>@cols=1:支持IDEA和vsc</td>
<td>@cols=1:支持IDEA和vsc</td>
</tr>
<tr>
<td>可維護性</td>
<td>開源，golang編寫，6K stars，社羣活躍</td>
<td>@cols=1:開源，golang編寫，11K stars，社羣活躍</td>
</tr>
<tr>
<td>性能</td>
<td></td>
<td>@cols=1:<img alt="Snipaste_2021-12-28_18-36-35.png" /><br class="jop-noMdConv" /></td>
</tr>
<tr>
<td>控制顆粒度</td>
<td>可根據需要定義</td>
<td>@cols=1:可根據需要定義</td>
</tr>
<tr>
<td>易用性</td>
<td>需要學習Rego語言，不過大概一個小時可以入門，上手快</td>
<td>@cols=1:需要熟悉config配置語法，加上內置函數之類，一個小時入門，上手快</td>
</tr>
<tr>
<td>@cols=1:接入istio難度</td>
<td>@cols=1:根據<a title="https://www.openpolicyagent.org/docs/latest/envoy-tutorial-istio/" href="https://www.openpolicyagent.org/docs/latest/envoy-tutorial-istio/">官方教程</a>，設置邊車，然後通過添加標籤的形式接入，架構如下<br class="jop-noMdConv" /><img alt="envoy-ext-authz-flow.png" />特點：<br class="jop-noMdConv" /><br class="jop-noMdConv" /><ol class="jop-noMdConv"><li class="jop-noMdConv">通過標籤可以方便接入</li><li class="jop-noMdConv">標籤下的pod有一個opa邊車，避免單點故障，並且高性能，有緩存</li><li class="jop-noMdConv">可以通過設置bundle服務動態加載模型和數據</li></ol></td>
<td>@cols=1:官方<a title="https://github.com/casbin/envoy-authz" href="https://github.com/casbin/envoy-authz">例子</a>已經對接好Envoy的ext_authz，只需要修改裏面的讀取token和用戶信息的方式，就能直接替換掉原本PDP服務；<br class="jop-noMdConv" /><br class="jop-noMdConv" />另外，文檔中提到的請求頭也不需要處理，因爲新版RequestAuthentication可以傳遞token過去；<br class="jop-noMdConv" /><br class="jop-noMdConv" />另外例子沒有詳細說明可以怎麼接，可以參照opa的模型，也可以單獨一個PDP服務</td>
</tr>
</tbody>
</table>
<br class="jop-noMdConv" />
<br class="jop-noMdConv" />
<h2 id="參考">參考</h2>
<ol>
<li><a title="https://en.wikipedia.org/wiki/XACML" href="https://en.wikipedia.org/wiki/XACML">XACML</a></li>
<li><a title="https://en.wikipedia.org/wiki/Attribute-based_access_control" href="https://en.wikipedia.org/wiki/Attribute-based_access_control">ABAC</a></li>
<li><a title="https://en.wikipedia.org/wiki/Role-based_access_control" href="https://en.wikipedia.org/wiki/Role-based_access_control">RBAC</a></li>
<li><a title="https://jiayu0x.com/2014/12/23/Linux-authority-and-access-control/" href="https://jiayu0x.com/2014/12/23/Linux-authority-and-access-control/">Linux 權限管理與訪問控制詳解(1)——基本概念和 DAC</a></li>
<li><a title="http://xn--%20rbac%20%20abac%20-g045ab7dkxe36u00smz8ipn7bm57a15txg1bcmzfr0am56w/" href="http://xn--%20rbac%20%20abac%20-g045ab7dkxe36u00smz8ipn7bm57a15txg1bcmzfr0am56w/">關於 RBAC 和 ABAC 兩種權限設計的優缺點</a></li>
<li><a title="http://xn--%20abac%20-2u5p059t4zvbkzzf/" href="http://xn--%20abac%20-2u5p059t4zvbkzzf/">使用 ABAC 鑑權</a></li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[envoy速覽]]></title>
            <guid>a153270c69804329aa9f11aa949ffc4b</guid>
            <pubDate>Fri, 24 Mar 2023 15:51:42 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="組織架構">組織架構</h2>
<ol>
<li>Listeners:：它們定義了 Envoy 代理如何接受傳入的請求。目前，Envoy Proxy 僅支持基於 TCP 的偵聽器。建立連接後，將其傳遞給一組過濾器進行處理</li>
<li>Filters：它們是可以處理入站和出站數據的管道架構的一部分。此功能啓用過濾器，例如 Gzip，可在將數據發送到客戶端之前對其進行壓縮</li>
<li>Routers：這些將流量轉發到所需的目的地（集羣）。</li>
<li>Clusters：它們定義流量的目標端點和配置設置。</li>
</ol>
<h2 id="特點">特點</h2>
<ol>
<li>每個工作線程運行一個非阻塞事件循環</li>
<li>轉發日誌爲stdout和stderr</li>
<li>通過docker配置低權限用戶</li>
<li>xDS 配置(discovery service)
<ul>
<li>eds, cds, lds</li>
<li>file-based，RESTful-api，gRPC</li>
</ul>
</li>
<li>灰度測試 weight</li>
<li>方便集成監控(<a title="https://www.jaegertracing.io/" href="https://www.jaegertracing.io/">Jaeger</a>)和指標(<a title="https://prometheus.io/" href="https://prometheus.io/">Prometheus</a>)</li>
</ol>
<h2 id="簡單樣例">簡單樣例</h2>
<div><pre class="hljs"><code><span class="hljs-attr">static_resources:</span>
  <span class="hljs-attr">listeners:</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">listener_0</span>
    <span class="hljs-attr">address:</span>
      <span class="hljs-attr">socket_address:</span> { <span class="hljs-attr">address:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>, <span class="hljs-attr">port_value:</span> <span class="hljs-number">10000</span> }
 
    <span class="hljs-attr">filter_chains:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">filters:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">envoy.http_connection_manager</span>
        <span class="hljs-attr">config:</span>
          <span class="hljs-attr">stat_prefix:</span> <span class="hljs-string">ingress_http</span>
          <span class="hljs-attr">route_config:</span>
            <span class="hljs-attr">name:</span> <span class="hljs-string">local_route</span>
            <span class="hljs-attr">virtual_hosts:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">local_service</span>
              <span class="hljs-attr">domains:</span> [<span class="hljs-string">"*"</span>]
              <span class="hljs-attr">routes:</span>
              <span class="hljs-bullet">-</span> <span class="hljs-attr">match:</span> { <span class="hljs-attr">prefix:</span> <span class="hljs-string">"/"</span> }
                <span class="hljs-attr">route:</span> { <span class="hljs-attr">host_rewrite:</span> <span class="hljs-string">www.google.com</span>, <span class="hljs-attr">cluster:</span> <span class="hljs-string">service_google</span> }
          <span class="hljs-attr">http_filters:</span>
          <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">envoy.router</span>
 
  <span class="hljs-attr">clusters:</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">service_google</span>
    <span class="hljs-attr">connect_timeout:</span> <span class="hljs-number">0.</span><span class="hljs-string">25s</span>
    <span class="hljs-attr">type:</span> <span class="hljs-string">LOGICAL_DNS</span>
    <span class="hljs-attr">dns_lookup_family:</span> <span class="hljs-string">V4_ONLY</span>
    <span class="hljs-attr">lb_policy:</span> <span class="hljs-string">ROUND_ROBIN</span>
    <span class="hljs-attr">hosts:</span> [{ <span class="hljs-attr">socket_address:</span> { <span class="hljs-attr">address:</span> <span class="hljs-string">google.com</span>, <span class="hljs-attr">port_value:</span> <span class="hljs-number">443</span> }}]
    <span class="hljs-attr">tls_context:</span> { <span class="hljs-attr">sni:</span> <span class="hljs-string">www.google.com</span> }
 
<span class="hljs-attr">admin:</span>
  <span class="hljs-attr">access_log_path:</span> <span class="hljs-string">/tmp/admin_access.log</span>
  <span class="hljs-attr">address:</span>
    <span class="hljs-attr">socket_address:</span> { <span class="hljs-attr">address:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>, <span class="hljs-attr">port_value:</span> <span class="hljs-number">9901</span> }</code></pre></div>
<h2 id="參考">參考</h2>
<p><a title="https://www.envoyproxy.io/try/getting-started" href="https://www.envoyproxy.io/try/getting-started">envoy官方教程</a></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[異常處理]]></title>
            <guid>cc1f422794884d03a0faccf4a2d2dff8</guid>
            <pubDate>Fri, 24 Mar 2023 15:41:49 GMT</pubDate>
            <content:encoded><![CDATA[<table>
<thead>
<tr>
<th>類型</th>
<th>情況</th>
<th>異常信息</th>
<th>處理方式</th>
</tr>
</thead>
<tbody>
<tr>
<td>業務異常</td>
<td>1. 操作非法<br class="jop-noMdConv" />2. 參數不符<br class="jop-noMdConv" />3. 權限非法<br class="jop-noMdConv" />4. 資源不存在</td>
<td>給用戶準確信息，比如密碼錯誤</td>
<td>用戶處理或者打印簡單日誌</td>
</tr>
<tr>
<td>系統/程序異常</td>
<td>1. 網絡異常<br class="jop-noMdConv" />2. 服務間調用異常<br class="jop-noMdConv" />3. 數據庫異常<br class="jop-noMdConv" />4. 緩存異常<br class="jop-noMdConv" />5. 內存溢出</td>
<td>給開發者具體異常信息，比如數據庫連接失敗原因</td>
<td>重試，聯繫開發者或者記錄詳細堆棧</td>
</tr>
</tbody>
</table>
<h2 id="原則">原則</h2>
<ol>
<li>只在必要使用異常的地方纔使用異常，不要用異常去控制程序的流程。慎地使用異常，異常捕獲的代價非常高昂，異常使用過多會嚴重影響程序的性能（java）。</li>
<li>切忌使用空catch塊。千萬不要使用空的catch塊，空的catch塊意味着你在程序中隱藏了錯誤和異常，並且很可能導致程序出現不可控的執行結果。如果你非常肯定捕獲到的異常不會以任何方式對程序造成影響，最好用Log日誌將該異常進行記錄，以便日後方便更新和維護。</li>
<li>異常信息放到一個單獨的文件中</li>
<li>在finally中釋放資源</li>
<li>如果客戶端可以從異常中採取行動進行恢復的，就使用checked exception，如果客戶什麼也做不了，就用unchecked exception。我指的是，不僅僅是記錄異常，還要採取措施來恢復。</li>
<li>如果自定義的異常沒有提供有用的信息的話，請不要創建它們。儘量使用編程語言定義好的異常類，而非我們自己創建的異常類。它們使我們的代碼易讀，也避免代碼消耗更多內存。</li>
<li>如果你將一個異常包裝成另一種異常時，構造一個新異常要傳遞源異常。</li>
<li>日誌中記錄詳細的異常信息。</li>
<li>記錄異常，僅記錄一次</li>
</ol>
<h2 id="node中異常類型">node中異常類型</h2>
<ol>
<li>同步異常</li>
</ol>
<div><pre class="hljs"><code><span class="hljs-keyword">try</span> {
  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">'test'</span>)
} <span class="hljs-keyword">catch</span> (e) {
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(e)
}</code></pre></div>
<ol start="2">
<li>異步異常</li>
</ol>
<div><pre class="hljs"><code><span class="hljs-comment">// promise</span>
<span class="hljs-keyword">try</span> {
  <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">asyncWork</span>()
} <span class="hljs-keyword">catch</span> (e) {
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(e)
}
<span class="hljs-comment">// event</span>
<span class="hljs-keyword">const</span> s = fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">'path/of/file'</span>)
s.<span class="hljs-title function_">on</span>(<span class="hljs-string">'error'</span>, <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(e))</code></pre></div>
<h3 id="node-verror">node-verror</h3>
<p>這個<a title="https://github.com/joyent/node-verror" href="https://github.com/joyent/node-verror">repo</a> 可支持構建error chain和添加額外信息</p>
<h2 id="參考">參考</h2>
<ol>
<li><a title="https://www.cnblogs.com/Jtianlin/p/4604178.html" href="https://www.cnblogs.com/Jtianlin/p/4604178.html">異常處理最佳實戰</a></li>
<li><a title="https://blog.51cto.com/winters1224/2493466" href="https://blog.51cto.com/winters1224/2493466">系統中的業務異常</a></li>
<li><a title="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Control_flow_and_error_handling#exception_handling_statements" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Control_flow_and_error_handling#exception_handling_statements">Exception handling statements</a></li>
<li><a title="https://www.toptal.com/nodejs/node-js-error-handling" href="https://www.toptal.com/nodejs/node-js-error-handling">How to Build a Node.js Error-handling System</a></li>
<li><a title="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error">Error MDN說明</a></li>
<li><a title="https://www.joyent.com/node-js/production/design/errors" href="https://www.joyent.com/node-js/production/design/errors">Error Handling in Node.js</a></li>
</ol>
]]></content:encoded>
        </item>
    </channel>
</rss>